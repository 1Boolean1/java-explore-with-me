CREATE TABLE IF NOT EXISTS Categories
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS Users
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name  VARCHAR(30) NOT NULL,
    email VARCHAR(30) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS Locations
(
    id  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lat DOUBLE NOT NULL,
    lon DOUBLE NOT NULL
);

CREATE TABLE IF NOT EXISTS Events
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation         TEXT        NOT NULL,
    category_id        BIGINT,
    confirmed_requests INT         NOT NULL,
    created_on         TIMESTAMP   NOT NULL,
    description        TEXT        NOT NULL,
    event_date         TIMESTAMP   NOT NULL,
    user_id            LONG        NOT NULL,
    location           LONG        NOT NULL,
    paid               BOOLEAN     NOT NULL,
    participant_limit  INT         NOT NULL,
    published_on       TIMESTAMP   NOT NULL,
    request_moderator  BOOLEAN     NOT NULL,
    state              VARCHAR(20) NOT NULL,
    title              VARCHAR     NOT NULL,
    views              BIGINT      NOT NULL,
    FOREIGN KEY (category_id) REFERENCES Categories (id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES Users (id) ON DELETE CASCADE,
    FOREIGN KEY (location) REFERENCES Locations (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Requests
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created      TIMESTAMP NOT NULL,
    requester_id BIGINT    NOT NULL,
    event_id     BIGINT    NOT NULL,
    status       VARCHAR   NOT NULL,
    FOREIGN KEY (requester_id) REFERENCES Users (id) ON DELETE CASCADE,
    FOREIGN KEY (event_id) REFERENCES Events (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Compilations
(
    id     BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned BOOLEAN     NOT NULL,
    title  VARCHAR(50) NOT NULL
);


CREATE TABLE IF NOT EXISTS Compilation_Events
(
    compilation_id BIGINT NOT NULL,
    event_id       BIGINT NOT NULL,
    PRIMARY KEY (compilation_id, event_id),
    FOREIGN KEY (compilation_id) REFERENCES Compilations (id) ON DELETE CASCADE,
    FOREIGN KEY (event_id) REFERENCES Events (id) ON DELETE CASCADE
);



